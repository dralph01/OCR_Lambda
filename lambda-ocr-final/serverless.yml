service: ocr-envelope-processor

provider:
  name: aws
  runtime: python3.11
  stage: ${opt:stage, 'dev'}    # Accept --stage prod, fallback to dev
  architecture: arm64
  region: us-east-1
  timeout: 30
  memorySize: 512

  environment:
    STAGE: ${opt:stage, 'dev'}
    BUCKET_NAME: ${self:custom.bucketName}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:ListBucket
          Resource:
            - arn:aws:s3:::ocr-envelopes-${opt:stage, 'dev'}
            - arn:aws:s3:::ocr-envelopes-${opt:stage, 'dev'}/*

  apiGateway:
    binaryMediaTypes:
      - '*/*'

functions:
  ocr:
    handler: ocr_lambda.ocr_lambda.lambda_handler
    architecture: arm64
    timeout: 29  # Prevent API Gateway timeout conflict
    events:
      - http:
          path: ocr
          method: post
          cors: true
    layers:
      - arn:aws:lambda:us-east-1:211302765842:layer:poppler-layer-arm64:1

package:
  individually: true
  exclude:
    - __pycache__/**
    - "*.pyc"
    - node_modules/**
    - .venv/**

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    slim: true
    useDownloadCache: false
    useStaticCache: false
    platform: linux/arm64

  bucketName: ocr-envelopes-${opt:stage, 'dev'}  # Stage-specific bucket
