{
  "/Users/davidralph/Documents/Clients/Fowey Investments/OCR_Lambda/lambda-ocr-final/serverless.yml": {
    "versionFramework": "4.17.1",
    "servicePath": "/Users/davidralph/Documents/Clients/Fowey Investments/OCR_Lambda/lambda-ocr-final/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "ocr-envelope-processor",
      "provider": {
        "name": "aws",
        "runtime": "python3.11",
        "stage": "prod",
        "architecture": "arm64",
        "region": "us-east-1",
        "timeout": 30,
        "memorySize": 512,
        "environment": {
          "STAGE": "prod",
          "BUCKET_NAME": "ocr-envelopes-prod"
        },
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:GetObject",
                  "s3:PutObject",
                  "s3:ListBucket"
                ],
                "Resource": [
                  "arn:aws:s3:::ocr-envelopes-prod",
                  "arn:aws:s3:::ocr-envelopes-prod/*"
                ]
              }
            ]
          }
        },
        "apiGateway": {
          "binaryMediaTypes": [
            "*/*"
          ]
        },
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "OcrLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/ocr-envelope-processor-prod-ocr"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "ocr-envelope-processor",
                          "prod",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ocr-envelope-processor-prod*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ocr-envelope-processor-prod*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "s3:GetObject",
                            "s3:PutObject",
                            "s3:ListBucket"
                          ],
                          "Resource": [
                            "arn:aws:s3:::ocr-envelopes-prod",
                            "arn:aws:s3:::ocr-envelopes-prod/*"
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "ocr-envelope-processor",
                      "prod",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "OcrLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-9468b86a-ba07",
                  "S3Key": "serverless/ocr-envelope-processor/prod/1753234975464-2025-07-23T01:42:55.464Z/ocr.zip"
                },
                "Handler": "ocr_lambda.ocr_lambda.lambda_handler",
                "Runtime": "python3.11",
                "FunctionName": "ocr-envelope-processor-prod-ocr",
                "MemorySize": 512,
                "Timeout": 29,
                "Architectures": [
                  "arm64"
                ],
                "Environment": {
                  "Variables": {
                    "STAGE": "prod",
                    "BUCKET_NAME": "ocr-envelopes-prod"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                },
                "Layers": [
                  "arn:aws:lambda:us-east-1:211302765842:layer:poppler-layer-arm64:1"
                ]
              },
              "DependsOn": [
                "OcrLogGroup"
              ]
            },
            "OcrLambdaVersionlZmSrvFO0pAZfo3Qiz0VVyIssibNoPJV2Fmi26ECZI": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "OcrLambdaFunction"
                },
                "CodeSha256": "VWxVv7KcYNURS9NO8MKej/ox4e0sbf2R2062wDqqbrY="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "prod-ocr-envelope-processor",
                "BinaryMediaTypes": [
                  "*/*"
                ],
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceOcr": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "ocr",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodOcrOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceOcr"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodOcrPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceOcr"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "OcrLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "OcrLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1753234899199": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "prod"
              },
              "DependsOn": [
                "ApiGatewayMethodOcrOptions",
                "ApiGatewayMethodOcrPost"
              ]
            },
            "OcrLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "OcrLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-9468b86a-ba07",
              "Export": {
                "Name": "sls-ocr-envelope-processor-prod-ServerlessDeploymentBucketName"
              }
            },
            "OcrLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "OcrLambdaVersionlZmSrvFO0pAZfo3Qiz0VVyIssibNoPJV2Fmi26ECZI"
              },
              "Export": {
                "Name": "sls-ocr-envelope-processor-prod-OcrLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/prod"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-ocr-envelope-processor-prod-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "ocr": {
          "handler": "ocr_lambda.ocr_lambda.lambda_handler",
          "architecture": "arm64",
          "timeout": 29,
          "events": [
            {
              "http": {
                "path": "ocr",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "layers": [
            "arn:aws:lambda:us-east-1:211302765842:layer:poppler-layer-arm64:1"
          ],
          "name": "ocr-envelope-processor-prod-ocr",
          "module": ".",
          "package": {
            "artifact": ".serverless/ocr.zip"
          },
          "memory": 512,
          "runtime": "python3.11",
          "vpc": {},
          "versionLogicalId": "OcrLambdaVersionlZmSrvFO0pAZfo3Qiz0VVyIssibNoPJV2Fmi26ECZI"
        }
      },
      "package": {
        "individually": true,
        "exclude": [
          "__pycache__/**",
          "*.pyc",
          "node_modules/**",
          ".venv/**"
        ],
        "artifactsS3KeyDirname": "serverless/ocr-envelope-processor/prod/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-us-east-1-9468b86a-ba07",
        "artifactDirectoryName": "serverless/ocr-envelope-processor/prod/1753234975464-2025-07-23T01:42:55.464Z"
      },
      "plugins": [
        "serverless-python-requirements"
      ],
      "custom": {
        "pythonRequirements": {
          "dockerizePip": true,
          "slim": true,
          "useDownloadCache": false,
          "useStaticCache": false,
          "platform": "linux/arm64"
        },
        "bucketName": "ocr-envelopes-prod"
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.11",
      "stage": "prod",
      "architecture": "arm64",
      "region": "us-east-1",
      "timeout": 30,
      "memorySize": 512,
      "environment": {
        "STAGE": "prod",
        "BUCKET_NAME": "ocr-envelopes-prod"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject",
                "s3:PutObject",
                "s3:ListBucket"
              ],
              "Resource": [
                "arn:aws:s3:::ocr-envelopes-prod",
                "arn:aws:s3:::ocr-envelopes-prod/*"
              ]
            }
          ]
        }
      },
      "apiGateway": {
        "binaryMediaTypes": [
          "*/*"
        ]
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "OcrLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ocr-envelope-processor-prod-ocr"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "ocr-envelope-processor",
                        "prod",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ocr-envelope-processor-prod*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ocr-envelope-processor-prod*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:GetObject",
                          "s3:PutObject",
                          "s3:ListBucket"
                        ],
                        "Resource": [
                          "arn:aws:s3:::ocr-envelopes-prod",
                          "arn:aws:s3:::ocr-envelopes-prod/*"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "ocr-envelope-processor",
                    "prod",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "OcrLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-9468b86a-ba07",
                "S3Key": "serverless/ocr-envelope-processor/prod/1753234975464-2025-07-23T01:42:55.464Z/ocr.zip"
              },
              "Handler": "ocr_lambda.ocr_lambda.lambda_handler",
              "Runtime": "python3.11",
              "FunctionName": "ocr-envelope-processor-prod-ocr",
              "MemorySize": 512,
              "Timeout": 29,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "STAGE": "prod",
                  "BUCKET_NAME": "ocr-envelopes-prod"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:211302765842:layer:poppler-layer-arm64:1"
              ]
            },
            "DependsOn": [
              "OcrLogGroup"
            ]
          },
          "OcrLambdaVersionlZmSrvFO0pAZfo3Qiz0VVyIssibNoPJV2Fmi26ECZI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "OcrLambdaFunction"
              },
              "CodeSha256": "VWxVv7KcYNURS9NO8MKej/ox4e0sbf2R2062wDqqbrY="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "prod-ocr-envelope-processor",
              "BinaryMediaTypes": [
                "*/*"
              ],
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceOcr": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "ocr",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodOcrOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceOcr"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodOcrPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceOcr"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "OcrLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "OcrLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1753234899199": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "prod"
            },
            "DependsOn": [
              "ApiGatewayMethodOcrOptions",
              "ApiGatewayMethodOcrPost"
            ]
          },
          "OcrLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "OcrLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-9468b86a-ba07",
            "Export": {
              "Name": "sls-ocr-envelope-processor-prod-ServerlessDeploymentBucketName"
            }
          },
          "OcrLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "OcrLambdaVersionlZmSrvFO0pAZfo3Qiz0VVyIssibNoPJV2Fmi26ECZI"
            },
            "Export": {
              "Name": "sls-ocr-envelope-processor-prod-OcrLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/prod"
                ]
              ]
            },
            "Export": {
              "Name": "sls-ocr-envelope-processor-prod-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: ocr-envelope-processor\n\nprovider:\n  name: aws\n  runtime: python3.11\n  stage: ${opt:stage, 'dev'}    # Accept --stage prod, fallback to dev\n  architecture: arm64\n  region: us-east-1\n  timeout: 30\n  memorySize: 512\n\n  environment:\n    STAGE: ${opt:stage, 'dev'}\n    BUCKET_NAME: ${self:custom.bucketName}\n\n  iam:\n    role:\n      statements:\n        - Effect: Allow\n          Action:\n            - s3:GetObject\n            - s3:PutObject\n            - s3:ListBucket\n          Resource:\n            - arn:aws:s3:::ocr-envelopes-${opt:stage, 'dev'}\n            - arn:aws:s3:::ocr-envelopes-${opt:stage, 'dev'}/*\n\n  apiGateway:\n    binaryMediaTypes:\n      - '*/*'\n\nfunctions:\n  ocr:\n    handler: ocr_lambda.ocr_lambda.lambda_handler\n    architecture: arm64\n    timeout: 29  # Prevent API Gateway timeout conflict\n    events:\n      - http:\n          path: ocr\n          method: post\n          cors: true\n    layers:\n      - arn:aws:lambda:us-east-1:211302765842:layer:poppler-layer-arm64:1\n\npackage:\n  individually: true\n  exclude:\n    - __pycache__/**\n    - \"*.pyc\"\n    - node_modules/**\n    - .venv/**\n\nplugins:\n  - serverless-python-requirements\n\ncustom:\n  pythonRequirements:\n    dockerizePip: true\n    slim: true\n    useDownloadCache: false\n    useStaticCache: false\n    platform: linux/arm64\n\n  bucketName: ocr-envelopes-${opt:stage, 'dev'}  # Stage-specific bucket\n",
    "command": [
      "deploy"
    ],
    "options": {
      "stage": "prod"
    },
    "orgId": "d1ed66ae-b321-4bf1-9dcd-d53c0ddb0c4e",
    "orgName": "ihaus",
    "userId": "YlcRjvtcbL7QrhJW8s",
    "userName": "ihaus",
    "serviceProviderAwsAccountId": "211302765842",
    "serviceProviderAwsCfStackName": "ocr-envelope-processor-prod",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:211302765842:stack/ocr-envelope-processor-prod/0d558a90-5ea5-11f0-9082-12f4bb44a6b5",
    "serviceProviderAwsCfStackCreated": "2025-07-11T22:19:03.623Z",
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": "CREATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "OcrLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:211302765842:function:ocr-envelope-processor-prod-ocr:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-ocr-envelope-processor-prod-OcrLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://nwnt13rrb6.execute-api.us-east-1.amazonaws.com/prod",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-ocr-envelope-processor-prod-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-9468b86a-ba07",
        "ExportName": "sls-ocr-envelope-processor-prod-ServerlessDeploymentBucketName"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "OcrLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/ocr-envelope-processor-prod-ocr"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "ocr-envelope-processor",
                      "prod",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ocr-envelope-processor-prod*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ocr-envelope-processor-prod*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:GetObject",
                        "s3:PutObject",
                        "s3:ListBucket"
                      ],
                      "Resource": [
                        "arn:aws:s3:::ocr-envelopes-prod",
                        "arn:aws:s3:::ocr-envelopes-prod/*"
                      ]
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "ocr-envelope-processor",
                  "prod",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "OcrLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-9468b86a-ba07",
              "S3Key": "serverless/ocr-envelope-processor/prod/1753234975464-2025-07-23T01:42:55.464Z/ocr.zip"
            },
            "Handler": "ocr_lambda.ocr_lambda.lambda_handler",
            "Runtime": "python3.11",
            "FunctionName": "ocr-envelope-processor-prod-ocr",
            "MemorySize": 512,
            "Timeout": 29,
            "Architectures": [
              "arm64"
            ],
            "Environment": {
              "Variables": {
                "STAGE": "prod",
                "BUCKET_NAME": "ocr-envelopes-prod"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            },
            "Layers": [
              "arn:aws:lambda:us-east-1:211302765842:layer:poppler-layer-arm64:1"
            ]
          },
          "DependsOn": [
            "OcrLogGroup"
          ]
        },
        "OcrLambdaVersionlZmSrvFO0pAZfo3Qiz0VVyIssibNoPJV2Fmi26ECZI": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "OcrLambdaFunction"
            },
            "CodeSha256": "VWxVv7KcYNURS9NO8MKej/ox4e0sbf2R2062wDqqbrY="
          }
        },
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "prod-ocr-envelope-processor",
            "BinaryMediaTypes": [
              "*/*"
            ],
            "EndpointConfiguration": {
              "Types": [
                "EDGE"
              ]
            },
            "Policy": ""
          }
        },
        "ApiGatewayResourceOcr": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "ocr",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodOcrOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'*'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceOcr"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodOcrPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceOcr"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "OcrLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "OcrLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayDeployment1753234899199": {
          "Type": "AWS::ApiGateway::Deployment",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "prod"
          },
          "DependsOn": [
            "ApiGatewayMethodOcrOptions",
            "ApiGatewayMethodOcrPost"
          ]
        },
        "OcrLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "OcrLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-us-east-1-9468b86a-ba07",
          "Export": {
            "Name": "sls-ocr-envelope-processor-prod-ServerlessDeploymentBucketName"
          }
        },
        "OcrLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "OcrLambdaVersionlZmSrvFO0pAZfo3Qiz0VVyIssibNoPJV2Fmi26ECZI"
          },
          "Export": {
            "Name": "sls-ocr-envelope-processor-prod-OcrLambdaFunctionQualifiedArn"
          }
        },
        "ServiceEndpoint": {
          "Description": "URL of the service endpoint",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                "/prod"
              ]
            ]
          },
          "Export": {
            "Name": "sls-ocr-envelope-processor-prod-ServiceEndpoint"
          }
        }
      }
    }
  }
}